# This workflow will build a Java project with Maven
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-maven

name: Java CI with Maven

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:
    runs-on: ubuntu-latest
    env:
          DISPLAY: ':99'
    services:
      mysql:
        image: mysql:5.7
        env:
          DB_DATABASE: cine
          DB_USER: 'spq'
          DB_PASSWORD: 'spq'
          DB_HOST: 'localhost'
        ports:
          - 3306:3306
    steps:
    - uses: actions/checkout@v2
    - name: Set up MySQL
      run: |
          sudo /etc/init.d/mysql start
          mysql -e "CREATE SCHEMA cine;" -uroot -proot
          mysql -e "CREATE USER 'spq'@'localhost' IDENTIFIED BY 'spq';" -uroot -proot
          mysql -e "GRANT ALL ON cine.* TO 'spq'@'localhost';" -uroot -proot
          mysql -e "SHOW DATABASES;" -uroot -proot
    - name: Crear la pantalla virtual
      run: |
          Xvfb :99 -screen 0 1024x768x24 > /dev/null 2>&1 &
    - name: Set up JDK 1.11
      uses: actions/setup-java@v1
      with:
          java-version: 1.11
    - name: Build with Maven        
      run: |
          mvn --batch-mode --update-snapshots compile 
          mvn --batch-mode --update-snapshots datanucleus:enhance
          mvn --batch-mode --update-snapshots datanucleus:schema-create
          mvn --batch-mode --update-snapshots exec:java -Pdatos
    - name: Build with Maven including testing (with SonarCloud)
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
      run: |
            mvn --batch-mode --update-snapshots -Pfull test org.sonarsource.scanner.maven:sonar-maven-plugin:sonar 
    - name: Test Unitarios
      run: mvn --batch-mode --update-snapshots -Punit test 
    - name: Test Rendimiento
      run: mvn --batch-mode --update-snapshots -Pintegration verify
    - name: Test Ventanas
      run: |
          mvn --batch-mode --update-snapshots exec:java -P datos
          mvn --batch-mode --update-snapshots -Pgui verify 
    - name: Install doxygen
      run: sudo apt-get install -y doxygen
    - name: Install graphviz
      run: sudo apt-get install -y graphviz
    - name: Generate documentation
      run: mvn doxygen:report
    - name: Publish on Github Pages
      uses: crazy-max/ghaction-github-pages@v2.3.0
      with:
        build_dir: docs/html
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
